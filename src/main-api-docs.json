{
  "openapi": "3.0.1",
  "info": { "title": "OpenAPI definition", "version": "v0" },
  "servers": [
    {
      "url": "http://34.47.103.225:8444",
      "description": "Generated server url"
    }
  ],
  "security": [{ "Bearer Token": [] }],
  "tags": [
    { "name": "Post API", "description": "게시글 관련 API" },
    { "name": "Project Step API", "description": "프로젝트 단계 관련 API" },
    {
      "name": "Project Dashboard API",
      "description": "프로젝트 대시보드 관련 API"
    },
    { "name": "Project API", "description": "프로젝트 관련 API" },
    { "name": "My Page API", "description": "APIs Related to My Page" },
    { "name": "Comment API", "description": "댓글 관련 API" },
    {
      "name": "Project Checklist API",
      "description": "프로젝트 체크리스트 관련 API"
    },
    { "name": "Login Page API", "description": "APIs Related to Login Page" }
  ],
  "paths": {
    "/api/projects/steps": {
      "put": {
        "tags": ["Project Step API"],
        "summary": "프로젝트 단계 수정",
        "description": "특정 프로젝트의 단계를 수정합니다.",
        "operationId": "putProjectStep",
        "requestBody": {
          "description": "수정할 프로젝트 단계의 요청 데이터",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PutProjectStepRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "프로젝트 단계가 성공적으로 수정되었습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutProjectStepResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Project Step API"],
        "summary": "프로젝트 단계 추가",
        "description": "특정 프로젝트의 단계를 추가합니다.",
        "operationId": "postProjectStep",
        "parameters": [
          {
            "name": "requestDto",
            "in": "query",
            "description": "프로젝트 단계 추가 요청 데이터",
            "required": true,
            "schema": { "$ref": "#/components/schemas/PostProjectStepRequest" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostProjectStepRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "프로젝트 단계가 성공적으로 추가되었습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostProjectStepResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Project Step API"],
        "summary": "프로젝트 단계 삭제",
        "description": "특정 프로젝트 단계를 삭제합니다.",
        "operationId": "deleteProjectStep",
        "requestBody": {
          "description": "삭제할 프로젝트 단계의 요청 데이터",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteProjectStepRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "프로젝트 단계가 성공적으로 삭제되었습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteProjectStepResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/checklists": {
      "put": {
        "tags": ["Project Checklist API"],
        "summary": "체크리스트 수정",
        "description": "기존 체크리스트를 수정합니다.",
        "operationId": "putProjectChecklist",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutProjectChecklistRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "체크리스트가 성공적으로 수정되었습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutProjectChecklistResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Project Checklist API"],
        "summary": "체크리스트 생성",
        "description": "새로운 체크리스트를 생성합니다.",
        "operationId": "postProjectChecklist",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostProjectChecklistRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "체크리스트가 성공적으로 생성되었습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostProjectChecklistResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/{postId}": {
      "get": {
        "tags": ["Post API"],
        "summary": "게시글 상세 조회",
        "description": "게시글을 조회합니다.",
        "operationId": "selectPost",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "조회할 게시글의 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "게시글 조회 성공",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PostResponse" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Post API"],
        "summary": "게시물 수정",
        "description": "기존 게시글을 수정합니다.",
        "operationId": "updatePost",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "수정할 게시글의 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PostUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "게시글 수정 성공",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIResponse" }
              }
            }
          }
        }
      }
    },
    "/api/send-mail": {
      "post": {
        "tags": ["Login Page API"],
        "summary": "이메일 인증 번호 전송",
        "description": "주어진 이메일 주소로 인증 메일을 발송하며, 생성된 인증 키를 반환합니다.",
        "operationId": "sendMail",
        "responses": {
          "200": {
            "description": "요청 성공",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          }
        }
      }
    },
    "/api/projects/{stepId}/authorizations": {
      "get": {
        "tags": ["Project Step API"],
        "summary": "프로젝트 권한 조회",
        "description": "특정 단계의 프로젝트 권한을 조회합니다.",
        "operationId": "getProjectAuthorization",
        "parameters": [
          {
            "name": "stepId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "프로젝트 권한이 성공적으로 조회되었습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectAuthorizationResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Project Step API"],
        "summary": "프로젝트 권한 생성",
        "description": "특정 단계의 프로젝트 권한을 생성합니다.",
        "operationId": "postProjectAuthorization",
        "parameters": [
          {
            "name": "stepId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "description": "생성할 프로젝트 권한의 요청 데이터",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostProjectAuthorizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "프로젝트 권한이 성공적으로 생성되었습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostProjectAuthorizationResponse"
                }
              }
            }
          },
          "207": {
            "description": "일부 요청이 실패하였습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostProjectAuthorizationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/checklists/reject/{applicationId}": {
      "post": {
        "tags": ["Project Checklist API"],
        "summary": "체크리스트 신청 거절",
        "description": "특정 체크리스트 신청을 거절합니다.",
        "operationId": "postProjectChecklistReject",
        "parameters": [
          {
            "name": "applicationId",
            "in": "query",
            "description": "거절할 신청의 ID",
            "required": true,
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["files", "requestDto"],
                "type": "object",
                "properties": {
                  "requestDto": {
                    "$ref": "#/components/schemas/PostProjectChecklistRejectRequest"
                  },
                  "files": {
                    "type": "array",
                    "items": { "type": "string", "format": "binary" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "체크리스트 신청이 성공적으로 거절되었습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostProjectChecklistRejectResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/checklists/applications": {
      "post": {
        "tags": ["Project Checklist API"],
        "summary": "체크리스트 신청 생성",
        "description": "체크리스트에 새로운 신청을 생성합니다.",
        "operationId": "postProjectChecklistApplication",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "requestDto": {
                    "$ref": "#/components/schemas/PostProjectChecklistApplicationRequest"
                  },
                  "files": {
                    "type": "array",
                    "items": { "type": "string", "format": "binary" }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "체크리스트 신청이 성공적으로 생성되었습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostProjectChecklistApplicationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/checklists/accept/{applicationId}": {
      "post": {
        "tags": ["Project Checklist API"],
        "summary": "체크리스트 신청 승인",
        "description": "특정 체크리스트 신청을 승인합니다.",
        "operationId": "postProjectChecklistAccept",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "승인할 신청의 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "체크리스트 신청이 성공적으로 승인되었습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostProjectChecklistAcceptResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts": {
      "post": {
        "tags": ["Post API"],
        "summary": "게시글 생성",
        "description": "새로운 게시글을 생성합니다.",
        "operationId": "createPost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PostCreateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "게시글 생성 성공",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIResponse" }
              }
            }
          }
        }
      }
    },
    "/api/posts/{postId}/links": {
      "get": {
        "tags": ["Post API"],
        "operationId": "selectPostLinks",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponseListLinkResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Post API"],
        "operationId": "uploadLinks",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/LinkInput" }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponseSuccessCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/{postId}/comments": {
      "post": {
        "tags": ["Comment API"],
        "summary": "댓글 생성",
        "description": "댓글을 생성합니다.",
        "operationId": "createComment",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "게시글 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PostCommentRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "댓글 생성 성공",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIResponse" }
              }
            }
          }
        }
      }
    },
    "/api/members/{memberId}/profile-image": {
      "get": {
        "tags": ["My Page API"],
        "operationId": "getProfileImage",
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponseFileMetadataDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["My Page API"],
        "operationId": "uploadProfileImage",
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": ["file"],
                "type": "object",
                "properties": {
                  "file": { "type": "string", "format": "binary" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponseSuccessCode"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["My Page API"],
        "operationId": "deleteProfileImage",
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponseSuccessCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/logout": {
      "post": {
        "tags": ["Login Page API"],
        "summary": "회원 로그아웃",
        "description": "사용자 로그아웃 처리. 토큰의 상태를 BLACKLISTED로 변경하여 더 이상 사용할 수 없도록 처리.",
        "operationId": "logout",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "클라이언트에서 전달된 JWT 토큰",
            "required": true,
            "schema": { "type": "string" },
            "example": "Bearer <JWT_TOKEN>"
          }
        ],
        "responses": {
          "200": {
            "description": "요청 성공",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "OK",
                    "UPDATED",
                    "DELETED",
                    "CREATED",
                    "MULTISTATUS",
                    "NO_CONTENT"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "tags": ["Login Page API"],
        "summary": "회원 로그인",
        "description": "회원 로그인 처리 및 JWT 토큰 발급.",
        "operationId": "login",
        "requestBody": {
          "description": "로그인 요청 데이터",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginPostRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "로그인 성공 및 JWT 토큰 발급",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LoginResponse" }
              }
            }
          }
        }
      }
    },
    "/api/check-mail": {
      "post": {
        "tags": ["Login Page API"],
        "summary": "이메일 인증 확인",
        "description": "사용자가 입력한 인증 키를 검증하여 성공 여부를 반환합니다.",
        "operationId": "checkMail",
        "requestBody": {
          "description": "인증 키 확인 요청 데이터",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CheckMailPostRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "요청 성공",
            "content": {
              "application/json": { "schema": { "type": "boolean" } }
            }
          }
        }
      }
    },
    "/api/posts/{postId}/comments/{commentId}": {
      "delete": {
        "tags": ["Comment API"],
        "summary": "댓글 삭제",
        "description": "댓글을 삭제합니다.",
        "operationId": "deleteComment",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "게시글 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" },
            "example": 1
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "댓글 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DeleteCommentRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "댓글 삭제 성공",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIResponse" }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Comment API"],
        "summary": "댓글 수정",
        "description": "댓글을 수정합니다.",
        "operationId": "updateComment",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "게시글 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" },
            "example": 1
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "댓글 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PatchCommentRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "댓글 수정 성공",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIResponse" }
              }
            }
          }
        }
      }
    },
    "/api/members/{loginId}": {
      "get": {
        "tags": ["My Page API"],
        "summary": "회원 상세 정보 조회",
        "description": "특정 회원의 로그인 ID를 기반으로 상세 정보를 조회합니다.",
        "operationId": "memberDetail",
        "parameters": [
          {
            "name": "loginId",
            "in": "path",
            "description": "조회할 회원의 로그인 ID",
            "required": true,
            "schema": { "type": "string" },
            "example": "john123"
          }
        ],
        "responses": {
          "200": {
            "description": "회원 상세 정보 조회 성공",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MyPageGetMember" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["My Page API"],
        "summary": "회원 탈퇴",
        "description": "회원의 로그인 ID를 기반으로 회원 상태를 변경하여 탈퇴 처리합니다.",
        "operationId": "deleteMember",
        "parameters": [
          {
            "name": "loginId",
            "in": "path",
            "description": "탈퇴할 회원의 로그인 ID",
            "required": true,
            "schema": { "type": "string" },
            "example": "john123"
          }
        ],
        "responses": {
          "200": {
            "description": "회원 탈퇴 성공",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "OK",
                    "UPDATED",
                    "DELETED",
                    "CREATED",
                    "MULTISTATUS",
                    "NO_CONTENT"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["My Page API"],
        "summary": "회원 정보 수정",
        "description": "회원의 로그인 ID를 기반으로 회원 정보를 수정합니다.",
        "operationId": "updateMember",
        "parameters": [
          {
            "name": "loginId",
            "in": "path",
            "description": "수정할 회원의 로그인 ID",
            "required": true,
            "schema": { "type": "string" },
            "example": "john123"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PatchMemberRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "회원 정보 수정 성공",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PatchMemberResponse" }
              }
            }
          }
        }
      }
    },
    "/api/members/reset-password": {
      "patch": {
        "tags": ["Login Page API"],
        "summary": "비밀번호 재설정",
        "description": "회원 비밀번호를 재설정합니다.",
        "operationId": "resetPwd",
        "requestBody": {
          "description": "비밀번호 재설정 요청 데이터",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MemberPatchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "비밀번호 재설정 성공",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MemberPatchResponse" }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/steps": {
      "get": {
        "tags": ["Project Step API"],
        "summary": "프로젝트 내 모든 단계 및 체크리스트 조회",
        "description": "해당 프로젝트의 모든 단계와 체크리스트를 조회합니다.",
        "operationId": "getProjectStepAndChecklist",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "프로젝트 단계를 조회할 단계의 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "성공적으로 단계와 체크리스트를 반환했습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectStepResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{memberId}": {
      "get": {
        "tags": ["Project Dashboard API"],
        "summary": "프로젝트 목록 조회",
        "description": "사용자의 프로젝트 목록과 현재 회사의 프로젝트 목록을 반환합니다.",
        "operationId": "getMyProject",
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "성공적으로 프로젝트 목록을 반환했습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/detail/{projectId}": {
      "get": {
        "tags": ["Project API"],
        "summary": "프로젝트 상세 조회",
        "description": "특정 프로젝트의 상세 정보를 반환합니다.",
        "operationId": "getProjectDetail",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "조회할 프로젝트의 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "성공적으로 프로젝트 상세 정보를 반환했습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectDetailResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/checklists/{stepId}": {
      "get": {
        "tags": ["Project Checklist API"],
        "summary": "체크리스트 조회",
        "description": "특정 단계의 체크리스트를 조회합니다.",
        "operationId": "getProjectChecklist",
        "parameters": [
          {
            "name": "stepId",
            "in": "path",
            "description": "체크리스트를 조회할 단계의 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "성공적으로 체크리스트를 반환했습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStepChecklistResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/checklists/applications/{applicationId}": {
      "get": {
        "tags": ["Project Checklist API"],
        "operationId": "getProjectChecklistApplication",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponseGetProjectChecklistApplicationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/{postId}/files": {
      "get": {
        "tags": ["Post API"],
        "operationId": "selectPostFiles",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponseListFileMetadataDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/steps/{projectStepId}": {
      "get": {
        "tags": ["Post API"],
        "summary": "게시글 목록 조회",
        "description": "게시글 목록을 조회합니다.",
        "operationId": "selectList",
        "parameters": [
          {
            "name": "projectStepId",
            "in": "path",
            "description": "프로젝트 단계 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" },
            "example": 1
          },
          {
            "name": "page",
            "in": "query",
            "description": "현재 위치한 페이지 (0부터 시작)",
            "required": true,
            "schema": { "type": "integer", "format": "int32", "default": 0 },
            "example": 0
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "검색 키워드",
            "required": false,
            "schema": { "type": "string" },
            "example": "디자인 시안"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "필터 조건 (TITLE, CONTENT, WRITER)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["TITLE", "CONTENT", "WRITER"]
            },
            "example": "TITLE"
          }
        ],
        "responses": {
          "200": {
            "description": "게시글 목록 조회 성공",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PostListResponse" }
              }
            }
          }
        }
      }
    },
    "/api/projects/checklists/{checklistId}": {
      "delete": {
        "tags": ["Project Checklist API"],
        "summary": "체크리스트 삭제",
        "description": "특정 체크리스트를 삭제합니다.",
        "operationId": "deleteProjectChecklist",
        "parameters": [
          {
            "name": "checklistId",
            "in": "path",
            "description": "삭제할 체크리스트의 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "체크리스트가 성공적으로 삭제되었습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteProjectChecklistResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/{postId}/{registerId}": {
      "delete": {
        "tags": ["Post API"],
        "summary": "게시글 삭제",
        "description": "기존 게시글을 삭제합니다.",
        "operationId": "deletePost",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "registerId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "게시글 삭제 성공",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIResponse" }
              }
            }
          }
        }
      }
    },
    "/api/posts/{postId}/links/{linkId}": {
      "delete": {
        "tags": ["Post API"],
        "operationId": "deleteLink",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "linkId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponseSuccessCode"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PutProjectStepRequest": {
        "type": "object",
        "properties": {
          "stepId": { "type": "integer", "format": "int64" },
          "stepName": { "type": "string" },
          "stepDescription": { "type": "string" },
          "stepOrder": { "type": "integer", "format": "int32" }
        }
      },
      "PutProjectStepResponse": {
        "type": "object",
        "properties": {
          "stepId": { "type": "integer", "format": "int64" },
          "stepName": { "type": "string" },
          "stepDescription": { "type": "string" },
          "stepOrder": { "type": "integer", "format": "int32" }
        }
      },
      "PutProjectChecklistResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "isChecked": { "type": "string", "enum": ["YES", "NO"] }
        }
      },
      "PutProjectChecklistRequest": {
        "type": "object",
        "properties": {
          "checklistId": { "type": "integer", "format": "int64" },
          "title": { "type": "string" },
          "description": { "type": "string" }
        }
      },
      "APIResponse": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": { "type": "object" }
        }
      },
      "PostUpdateRequest": {
        "type": "object",
        "properties": {
          "projectStepId": { "type": "integer", "format": "int64" },
          "parentPostId": { "type": "integer", "format": "int64" },
          "postId": { "type": "integer", "format": "int64" },
          "isPinnedPost": { "type": "string", "enum": ["YES", "NO"] },
          "priority": { "type": "integer", "format": "int32" },
          "status": {
            "type": "string",
            "enum": [
              "DEFAULT",
              "IN_PROGRESS",
              "ADDITION",
              "COMPLETED",
              "ON_HOLD"
            ]
          },
          "title": { "type": "string" },
          "content": { "type": "string" },
          "deadline": { "type": "string", "format": "date" },
          "modifierId": { "type": "integer", "format": "int64" },
          "modifierIp": { "type": "string" }
        }
      },
      "PostProjectAuthorizationMemberAuthorization": {
        "type": "object",
        "properties": {
          "memberId": { "type": "integer", "format": "int64" },
          "projectAuthorization": { "type": "string" },
          "memberDivision": {
            "type": "string",
            "enum": ["CLIENT", "DEVELOPER"]
          }
        }
      },
      "PostProjectAuthorizationRequest": {
        "type": "object",
        "properties": {
          "authorizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostProjectAuthorizationMemberAuthorization"
            }
          }
        }
      },
      "PostProjectAuthorizationFailList": {
        "type": "object",
        "properties": {
          "member": {
            "$ref": "#/components/schemas/PostProjectAuthorizationMemberAuthorization"
          },
          "status": {
            "type": "string",
            "enum": [
              "CONTINUE",
              "SWITCHING_PROTOCOLS",
              "PROCESSING",
              "EARLY_HINTS",
              "CHECKPOINT",
              "OK",
              "CREATED",
              "ACCEPTED",
              "NON_AUTHORITATIVE_INFORMATION",
              "NO_CONTENT",
              "RESET_CONTENT",
              "PARTIAL_CONTENT",
              "MULTI_STATUS",
              "ALREADY_REPORTED",
              "IM_USED",
              "MULTIPLE_CHOICES",
              "MOVED_PERMANENTLY",
              "FOUND",
              "MOVED_TEMPORARILY",
              "SEE_OTHER",
              "NOT_MODIFIED",
              "USE_PROXY",
              "TEMPORARY_REDIRECT",
              "PERMANENT_REDIRECT",
              "BAD_REQUEST",
              "UNAUTHORIZED",
              "PAYMENT_REQUIRED",
              "FORBIDDEN",
              "NOT_FOUND",
              "METHOD_NOT_ALLOWED",
              "NOT_ACCEPTABLE",
              "PROXY_AUTHENTICATION_REQUIRED",
              "REQUEST_TIMEOUT",
              "CONFLICT",
              "GONE",
              "LENGTH_REQUIRED",
              "PRECONDITION_FAILED",
              "PAYLOAD_TOO_LARGE",
              "REQUEST_ENTITY_TOO_LARGE",
              "URI_TOO_LONG",
              "REQUEST_URI_TOO_LONG",
              "UNSUPPORTED_MEDIA_TYPE",
              "REQUESTED_RANGE_NOT_SATISFIABLE",
              "EXPECTATION_FAILED",
              "I_AM_A_TEAPOT",
              "INSUFFICIENT_SPACE_ON_RESOURCE",
              "METHOD_FAILURE",
              "DESTINATION_LOCKED",
              "UNPROCESSABLE_ENTITY",
              "LOCKED",
              "FAILED_DEPENDENCY",
              "TOO_EARLY",
              "UPGRADE_REQUIRED",
              "PRECONDITION_REQUIRED",
              "TOO_MANY_REQUESTS",
              "REQUEST_HEADER_FIELDS_TOO_LARGE",
              "UNAVAILABLE_FOR_LEGAL_REASONS",
              "INTERNAL_SERVER_ERROR",
              "NOT_IMPLEMENTED",
              "BAD_GATEWAY",
              "SERVICE_UNAVAILABLE",
              "GATEWAY_TIMEOUT",
              "HTTP_VERSION_NOT_SUPPORTED",
              "VARIANT_ALSO_NEGOTIATES",
              "INSUFFICIENT_STORAGE",
              "LOOP_DETECTED",
              "BANDWIDTH_LIMIT_EXCEEDED",
              "NOT_EXTENDED",
              "NETWORK_AUTHENTICATION_REQUIRED"
            ]
          },
          "message": { "type": "string" },
          "memberId": { "type": "integer", "format": "int64" },
          "memberDivision": {
            "type": "string",
            "enum": ["CLIENT", "DEVELOPER"]
          },
          "projectAuthorization": { "type": "string" }
        }
      },
      "PostProjectAuthorizationResponse": {
        "type": "object",
        "properties": {
          "stepId": { "type": "integer", "format": "int64" },
          "failList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostProjectAuthorizationFailList"
            }
          }
        }
      },
      "PostProjectStepPostChecklist": { "type": "object" },
      "PostProjectStepRequest": {
        "type": "object",
        "properties": {
          "projectId": { "type": "integer", "format": "int64" },
          "stepName": { "type": "string" },
          "stepDescription": { "type": "string" },
          "stepOrderNumber": { "type": "integer", "format": "int32" },
          "checklists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostProjectStepPostChecklist"
            }
          }
        }
      },
      "Company": {
        "type": "object",
        "properties": {
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "createdBy": { "type": "integer", "format": "int64" },
          "updatedBy": { "type": "integer", "format": "int64" },
          "id": { "type": "integer", "format": "int64" },
          "companyName": { "type": "string" },
          "representativeName": { "type": "string" },
          "representativeContact": { "type": "string" },
          "representativeEmail": { "type": "string" },
          "address": { "type": "string" },
          "businessType": {
            "type": "string",
            "enum": ["INDIVIDUAL", "CORPORATION"]
          },
          "businessRegistrationNumber": { "type": "string" },
          "isActive": { "type": "string", "enum": ["Y", "N"] }
        }
      },
      "PostProjectStepResponse": {
        "type": "object",
        "properties": {
          "projectStep": { "$ref": "#/components/schemas/ProjectStep" },
          "checklists": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/PostProjectStepPostChecklist"
            }
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "createdBy": { "type": "integer", "format": "int64" },
          "updatedBy": { "type": "integer", "format": "int64" },
          "id": { "type": "integer", "format": "int64" },
          "projectName": { "type": "string" },
          "customer": { "$ref": "#/components/schemas/Company" },
          "developer": { "$ref": "#/components/schemas/Company" },
          "projectDescription": { "type": "string" },
          "projectType": { "$ref": "#/components/schemas/ProjectType" },
          "projectStatusCode": {
            "type": "string",
            "enum": [
              "PREPARED",
              "IN_PROGRESS",
              "COMPLETED",
              "CLOSED",
              "CANCELLED",
              "DELETED"
            ]
          },
          "bnsManager": { "type": "string" },
          "contractNumber": { "type": "string" },
          "plannedStartDate": { "type": "string", "format": "date" },
          "plannedEndDate": { "type": "string", "format": "date" },
          "startDate": { "type": "string", "format": "date" },
          "endDate": { "type": "string", "format": "date" },
          "finalApproverId": { "type": "integer", "format": "int64" },
          "finalApprovalDate": { "type": "string", "format": "date-time" }
        }
      },
      "ProjectStep": {
        "type": "object",
        "properties": {
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "createdBy": { "type": "integer", "format": "int64" },
          "updatedBy": { "type": "integer", "format": "int64" },
          "id": { "type": "integer", "format": "int64" },
          "project": { "$ref": "#/components/schemas/Project" },
          "stepName": { "type": "string" },
          "stepDescription": { "type": "string" },
          "stepOrder": { "type": "integer", "format": "int32" },
          "isActive": { "type": "string", "enum": ["YES", "NO"] }
        }
      },
      "ProjectType": {
        "type": "object",
        "properties": {
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "createdBy": { "type": "integer", "format": "int64" },
          "updatedBy": { "type": "integer", "format": "int64" },
          "id": { "type": "integer", "format": "int64" },
          "projectTypeName": { "type": "string" },
          "projectTypeDescription": { "type": "string" },
          "useStatus": { "type": "string", "enum": ["YES", "NO"] }
        }
      },
      "PostProjectChecklistResponse": {
        "type": "object",
        "properties": {
          "projectChecklistId": { "type": "integer", "format": "int64" },
          "checklistTitle": { "type": "string" },
          "checklistDescription": { "type": "string" },
          "isActive": { "type": "string", "enum": ["YES", "NO"] },
          "isChecked": { "type": "string", "enum": ["YES", "NO"] }
        }
      },
      "PostProjectChecklistRequest": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "description": { "type": "string" },
          "projectStepId": { "type": "integer", "format": "int64" }
        }
      },
      "PostProjectChecklistRejectResponse": {
        "type": "object",
        "properties": {
          "applicationId": { "type": "integer", "format": "int64" },
          "approvalStatus": {
            "type": "string",
            "enum": ["WAITING", "APPROVED", "REJECTED"]
          },
          "processorId": { "type": "integer", "format": "int64" },
          "processorIp": { "type": "string" },
          "processDate": { "type": "string", "format": "date-time" },
          "rejectReason": { "type": "string" }
        }
      },
      "PostProjectChecklistRejectRequest": {
        "type": "object",
        "properties": {
          "applicationId": { "type": "integer", "format": "int64" },
          "rejectReason": { "type": "string" },
          "links": { "type": "array", "items": { "type": "string" } }
        }
      },
      "PostProjectChecklistApplicationResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "checklistId": { "type": "integer", "format": "int64" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "requesterId": { "type": "integer", "format": "int64" },
          "requesterIp": { "type": "string" }
        }
      },
      "PostProjectChecklistApplicationRequest": {
        "type": "object",
        "properties": {
          "checklistId": { "type": "integer", "format": "int64" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "requesterId": { "type": "integer", "format": "int64" },
          "files": {
            "type": "array",
            "items": { "type": "string", "format": "binary" }
          },
          "links": { "type": "array", "items": { "type": "string" } }
        }
      },
      "PostProjectChecklistAcceptResponse": {
        "type": "object",
        "properties": {
          "checklistId": { "type": "integer", "format": "int64" },
          "checklistStatus": {
            "type": "string",
            "enum": ["WAITING", "APPROVED", "REJECTED"]
          }
        }
      },
      "LinkInput": {
        "type": "object",
        "properties": {
          "linkTitle": { "type": "string" },
          "link": { "type": "string" }
        }
      },
      "PostCreateRequest": {
        "required": [
          "content",
          "projectStepId",
          "registerDate",
          "registerId",
          "registerIp",
          "title"
        ],
        "type": "object",
        "properties": {
          "projectStepId": { "type": "integer", "format": "int64" },
          "parentPostId": { "type": "integer", "format": "int64" },
          "isPinnedPost": { "type": "string", "enum": ["YES", "NO"] },
          "priority": { "type": "integer", "format": "int32" },
          "status": {
            "type": "string",
            "enum": [
              "DEFAULT",
              "IN_PROGRESS",
              "ADDITION",
              "COMPLETED",
              "ON_HOLD"
            ]
          },
          "title": { "type": "string" },
          "content": { "type": "string" },
          "deadline": { "type": "string", "format": "date" },
          "registerId": { "type": "integer", "format": "int64" },
          "registerIp": { "type": "string" },
          "registerDate": { "type": "string", "format": "date-time" },
          "linkInputList": {
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array",
            "items": { "$ref": "#/components/schemas/LinkInput" }
          }
        }
      },
      "APIResponseSuccessCode": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": {
            "type": "string",
            "enum": [
              "OK",
              "UPDATED",
              "DELETED",
              "CREATED",
              "MULTISTATUS",
              "NO_CONTENT"
            ]
          }
        }
      },
      "PostCommentRequest": {
        "required": ["content", "registerIp"],
        "type": "object",
        "properties": {
          "parentCommentId": { "type": "integer", "format": "int64" },
          "content": { "type": "string" },
          "registerIp": { "type": "string" }
        }
      },
      "LoginPostRequest": {
        "type": "object",
        "properties": {
          "loginId": { "type": "string" },
          "password": { "type": "string" }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "loginId": { "type": "string" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "role": { "type": "string", "enum": ["ADMIN", "SUPER", "USER"] },
          "profileUrl": { "type": "string" },
          "companyId": { "type": "integer", "format": "int64" },
          "companyName": { "type": "string" },
          "department": { "type": "string" },
          "position": { "type": "string" }
        }
      },
      "CheckMailPostRequest": {
        "type": "object",
        "properties": {
          "inputKey": { "type": "string" },
          "key": { "type": "string" }
        }
      },
      "PatchCommentRequest": {
        "required": ["content", "modifierId", "modifierIp"],
        "type": "object",
        "properties": {
          "content": { "type": "string" },
          "modifierId": { "type": "integer", "format": "int64" },
          "modifierIp": { "type": "string" }
        }
      },
      "PatchMemberResponse": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "companyId": { "type": "integer", "format": "int64" },
          "company": { "type": "string" },
          "department": { "type": "string" },
          "position": { "type": "string" }
        }
      },
      "PatchMemberRequest": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "companyId": { "type": "integer", "format": "int64" },
          "department": { "type": "string" },
          "position": { "type": "string" }
        }
      },
      "MemberPatchRequest": {
        "type": "object",
        "properties": {
          "password": { "type": "string" },
          "newPassword": { "type": "string" }
        }
      },
      "MemberPatchResponse": {
        "type": "object",
        "properties": { "loginId": { "type": "string" } }
      },
      "GetProjectAuthorizationMemberAuthorization": {
        "type": "object",
        "properties": {
          "projectAuthorization": { "type": "string" },
          "memberId": { "type": "integer", "format": "int64" },
          "memberDivision": {
            "type": "string",
            "enum": ["CLIENT", "DEVELOPER"]
          }
        }
      },
      "GetProjectAuthorizationResponse": {
        "type": "object",
        "properties": {
          "stepId": { "type": "integer", "format": "int64" },
          "projectAuthorizations": {
            "type": "array",
            "writeOnly": true,
            "items": { "$ref": "#/components/schemas/ProjectAuthorization" }
          },
          "memberAuthorization": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetProjectAuthorizationMemberAuthorization"
            }
          }
        }
      },
      "Member": {
        "type": "object",
        "properties": {
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "createdBy": { "type": "integer", "format": "int64" },
          "updatedBy": { "type": "integer", "format": "int64" },
          "id": { "type": "integer", "format": "int64" },
          "company": { "$ref": "#/components/schemas/Company" },
          "role": { "type": "string", "enum": ["ADMIN", "SUPER", "USER"] },
          "loginId": { "type": "string" },
          "password": { "type": "string" },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE", "WITHDRAW", "SUSPENDED"]
          },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "birthDate": { "type": "string", "format": "date" },
          "phoneNumber": { "type": "string" },
          "department": { "type": "string" },
          "position": { "type": "string" }
        }
      },
      "MemberProjectStepId": {
        "type": "object",
        "properties": {
          "memberId": { "type": "integer", "format": "int64" },
          "projectStepId": { "type": "integer", "format": "int64" }
        }
      },
      "ProjectAuthorization": {
        "type": "object",
        "properties": {
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "createdBy": { "type": "integer", "format": "int64" },
          "updatedBy": { "type": "integer", "format": "int64" },
          "id": { "$ref": "#/components/schemas/MemberProjectStepId" },
          "member": { "$ref": "#/components/schemas/Member" },
          "projectStep": { "$ref": "#/components/schemas/ProjectStep" },
          "memberType": { "type": "string", "enum": ["CLIENT", "DEVELOPER"] },
          "authorizationCode": { "type": "string" },
          "isActive": { "type": "string", "enum": ["YES", "NO"] }
        }
      },
      "GetProjectStepProjectChecklist": {
        "type": "object",
        "properties": {
          "checklistId": { "type": "integer", "format": "int64" },
          "checklistName": { "type": "string" },
          "checklistStatus": { "type": "string", "enum": ["YES", "NO"] },
          "approvalTime": { "type": "string", "format": "date-time" }
        }
      },
      "GetProjectStepProjectStepInfo": {
        "type": "object",
        "properties": {
          "projectStep": { "$ref": "#/components/schemas/ProjectStep" },
          "projectChecklist": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetProjectStepProjectChecklist"
            }
          },
          "stepId": { "type": "integer", "format": "int64" },
          "stepName": { "type": "string" },
          "stepOrder": { "type": "integer", "format": "int32" }
        }
      },
      "GetProjectStepResponse": {
        "type": "object",
        "properties": {
          "projectId": { "type": "integer", "format": "int64" },
          "projectStepInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetProjectStepProjectStepInfo"
            }
          }
        }
      },
      "GetProjectListGetCompanyProjectResponseInfo": {
        "type": "object",
        "properties": {
          "projectId": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "startDate": { "type": "string", "format": "date" },
          "endDate": { "type": "string", "format": "date" },
          "customerCompanyId": { "type": "integer", "format": "int64" },
          "customerCompanyName": { "type": "string" }
        }
      },
      "GetProjectListGetMyProjectResponseInfo": {
        "type": "object",
        "properties": {
          "projectId": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "startDate": { "type": "string", "format": "date" },
          "endDate": { "type": "string", "format": "date" },
          "customerCompanyId": { "type": "integer", "format": "int64" },
          "customerCompanyName": { "type": "string" }
        }
      },
      "GetProjectListResponse": {
        "type": "object",
        "properties": {
          "myProjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetProjectListGetMyProjectResponseInfo"
            }
          },
          "companyProjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetProjectListGetCompanyProjectResponseInfo"
            }
          }
        }
      },
      "GetProjectDetailChecklistApplicationList": {
        "type": "object",
        "properties": {
          "checklistApplicationId": { "type": "integer", "format": "int64" },
          "checklistName": { "type": "string" },
          "applicationTitle": { "type": "string" },
          "applicationUserName": { "type": "string" },
          "stepName": { "type": "string" },
          "applicationDateTime": { "type": "string", "format": "date-time" }
        }
      },
      "GetProjectDetailProjectDetail": {
        "type": "object",
        "properties": {
          "projectId": { "type": "integer", "format": "int64" },
          "projectTypeName": { "type": "string" },
          "projectName": { "type": "string" },
          "projectDescription": { "type": "string" },
          "projectContact": { "type": "string" },
          "projectContactPhone": { "type": "string" },
          "projectImageURL": { "type": "string" }
        }
      },
      "GetProjectDetailProjectStepInfo": {
        "type": "object",
        "properties": {
          "stepId": { "type": "integer", "format": "int64" },
          "stepName": { "type": "string" },
          "stepProcessRate": { "type": "number", "format": "double" }
        }
      },
      "GetProjectDetailResponse": {
        "type": "object",
        "properties": {
          "projectDetail": {
            "$ref": "#/components/schemas/GetProjectDetailProjectDetail"
          },
          "projectStep": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetProjectDetailProjectStepInfo"
            }
          },
          "checklistApplicationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetProjectDetailChecklistApplicationList"
            }
          }
        }
      },
      "GetStepChecklistResponse": {
        "type": "object",
        "properties": {
          "stepId": { "type": "integer", "format": "int64" },
          "checklists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetStepChecklistprojectChecklist"
            }
          }
        }
      },
      "GetStepChecklistprojectChecklist": {
        "type": "object",
        "properties": {
          "checklistId": { "type": "integer", "format": "int64" },
          "checklistName": { "type": "string" },
          "checklistStatus": { "type": "string", "enum": ["YES", "NO"] },
          "checkAcceptTime": { "type": "string", "format": "date-time" }
        }
      },
      "APIResponseGetProjectChecklistApplicationResponse": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": {
            "$ref": "#/components/schemas/GetProjectChecklistApplicationResponse"
          }
        }
      },
      "GetProjectChecklistApplicationResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64", "writeOnly": true },
          "title": { "type": "string", "writeOnly": true },
          "content": { "type": "string", "writeOnly": true }
        }
      },
      "GetCommentResponse": {
        "type": "object",
        "properties": {
          "commentId": { "type": "integer", "format": "int64" },
          "parentCommentId": { "type": "integer", "format": "int64" },
          "registerId": { "type": "integer", "format": "int64" },
          "writer": { "type": "string" },
          "content": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "PostResponse": {
        "type": "object",
        "properties": {
          "postId": { "type": "integer", "format": "int64" },
          "projectStepId": { "type": "integer", "format": "int64" },
          "parentPostId": { "type": "integer", "format": "int64" },
          "isPinnedPost": { "type": "string", "enum": ["YES", "NO"] },
          "priority": { "type": "integer", "format": "int32" },
          "status": {
            "type": "string",
            "enum": [
              "DEFAULT",
              "IN_PROGRESS",
              "ADDITION",
              "COMPLETED",
              "ON_HOLD"
            ]
          },
          "title": { "type": "string" },
          "content": { "type": "string" },
          "deadline": { "type": "string", "format": "date" },
          "writer": { "type": "string" },
          "createDate": { "type": "string", "format": "date-time" },
          "updateDate": { "type": "string", "format": "date-time" },
          "comments": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/GetCommentResponse" }
          }
        }
      },
      "APIResponseListLinkResponse": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/LinkResponse" }
          }
        }
      },
      "LinkResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "linkCategory": {
            "type": "string",
            "enum": [
              "CHECK_APPROVE_REQUEST_LINK",
              "CHECK_REJECTION_REASON_LINK",
              "POST_ATTACHMENT_LINK"
            ]
          },
          "referenceId": { "type": "integer", "format": "int64" },
          "linkTitle": { "type": "string" },
          "link": { "type": "string" },
          "createdBy": { "type": "integer", "format": "int64" },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      },
      "APIResponseListFileMetadataDto": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FileMetadataDto" }
          }
        }
      },
      "FileMetadataDto": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "category": { "type": "string" },
          "referenceId": { "type": "integer", "format": "int64" },
          "displayTitle": { "type": "string" },
          "title": { "type": "string" },
          "contentType": { "type": "string" },
          "format": { "type": "string" },
          "size": { "type": "number", "format": "double" },
          "path": { "type": "string" },
          "createdBy": { "type": "integer", "format": "int64" },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      },
      "PostListResponse": {
        "type": "object",
        "properties": {
          "projectStepId": { "type": "integer", "format": "int64" },
          "postId": { "type": "integer", "format": "int64" },
          "status": {
            "type": "string",
            "enum": [
              "DEFAULT",
              "IN_PROGRESS",
              "ADDITION",
              "COMPLETED",
              "ON_HOLD"
            ]
          },
          "priority": { "type": "integer", "format": "int32" },
          "title": { "type": "string" },
          "writer": { "type": "string" },
          "createDate": { "type": "string", "format": "date-time" },
          "deadline": { "type": "string", "format": "date" }
        }
      },
      "APIResponseFileMetadataDto": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": { "$ref": "#/components/schemas/FileMetadataDto" }
        }
      },
      "MyPageGetMember": {
        "type": "object",
        "properties": {
          "companyId": { "type": "integer", "format": "int64" },
          "company": { "type": "string" },
          "companyStatus": { "type": "string", "enum": ["Y", "N"] },
          "loginId": { "type": "string" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "birthDate": { "type": "string", "format": "date" },
          "department": { "type": "string" },
          "position": { "type": "string" }
        }
      },
      "DeleteProjectStepRequest": {
        "type": "object",
        "properties": {
          "projectId": { "type": "integer", "format": "int64" },
          "stepId": { "type": "integer", "format": "int64" }
        }
      },
      "DeleteProjectStepResponse": {
        "type": "object",
        "properties": {
          "projectId": { "type": "integer", "format": "int64" },
          "stepId": { "type": "integer", "format": "int64" }
        }
      },
      "DeleteProjectChecklistResponse": {
        "type": "object",
        "properties": {
          "checklistId": { "type": "integer", "format": "int64" },
          "checklistStatus": { "type": "string", "enum": ["YES", "NO"] }
        }
      },
      "DeleteCommentRequest": {
        "type": "object",
        "properties": {
          "modifierId": { "type": "integer", "format": "int64" },
          "modifierIp": { "type": "string" }
        }
      }
    },
    "securitySchemes": {
      "Bearer Token": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}
